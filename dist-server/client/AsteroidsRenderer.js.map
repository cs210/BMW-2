{"version":3,"sources":["../../src/client/AsteroidsRenderer.js"],"names":["ctx","game","canvas","AsteroidsRenderer","gameEngine","clientEngine","document","createElement","width","window","innerWidth","devicePixelRatio","height","innerHeight","body","insertBefore","getElementById","w","h","zoom","spaceHeight","spaceWidth","getContext","lineWidth","strokeStyle","fillStyle","setTimeout","removeInstructions","bind","t","dt","clearRect","save","translate","scale","drawBounds","world","forEachObject","id","obj","Ship","drawShip","physicsObj","Bullet","drawBullet","Asteroid","drawAsteroid","updateStatus","restore","playerShip","queryObject","playerId","lives","undefined","classList","remove","innerHTML","add","radius","shapes","position","rotate","angle","beginPath","moveTo","lineTo","closePath","stroke","j","numAsteroidVerts","xv","verts","yv","arc","bulletRadius","Math","PI","fill","Renderer"],"mappings":"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","sourcesContent":["import { Renderer } from 'lance-gg';\nimport Asteroid from './../common/Asteroid';\nimport Bullet from './../common/Bullet';\nimport Ship from './../common/Ship';\n\nlet ctx = null;\nlet game = null;\nlet canvas = null;\n\nexport default class AsteroidsRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n        game = gameEngine;\n\n        // Init canvas\n        canvas = document.createElement('canvas');\n        canvas.width = window.innerWidth * window.devicePixelRatio;\n        canvas.height = window.innerHeight * window.devicePixelRatio;\n        document.body.insertBefore(canvas, document.getElementById('logo'));\n        game.w = canvas.width;\n        game.h = canvas.height;\n        game.zoom = game.h / game.spaceHeight;\n        if (game.w / game.spaceWidth < game.zoom) game.zoom = game.w / game.spaceWidth;\n        ctx = canvas.getContext('2d');\n        ctx.lineWidth = 2 / game.zoom;\n        ctx.strokeStyle = ctx.fillStyle = 'white';\n\n        // remove instructions on first input\n        setTimeout(this.removeInstructions.bind(this), 5000);\n    }\n\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        // Clear the canvas\n        ctx.clearRect(0, 0, game.w, game.h);\n\n        // Transform the canvas\n        // Note that we need to flip the y axis since Canvas pixel coordinates\n        // goes from top to bottom, while physics does the opposite.\n        ctx.save();\n        ctx.translate(game.w/2, game.h/2); // Translate to the center\n        ctx.scale(game.zoom, -game.zoom);  // Zoom in and flip y axis\n\n        // Draw all things\n        this.drawBounds();\n        game.world.forEachObject((id, obj) => {\n            if (obj instanceof Ship) this.drawShip(obj.physicsObj);\n            else if (obj instanceof Bullet) this.drawBullet(obj.physicsObj);\n            else if (obj instanceof Asteroid) this.drawAsteroid(obj.physicsObj);\n        });\n\n        // update status and restore\n        this.updateStatus();\n        ctx.restore();\n    }\n\n    updateStatus() {\n\n        let playerShip = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\n\n        if (!playerShip) {\n            if (this.lives !== undefined)\n                document.getElementById('gameover').classList.remove('hidden');\n            return;\n        }\n\n        // update lives if necessary\n        if (playerShip.playerId === this.gameEngine.playerId && this.lives !== playerShip.lives) {\n            document.getElementById('lives').innerHTML = 'Lives ' + playerShip.lives;\n            this.lives = playerShip.lives;\n        }\n    }\n\n    removeInstructions() {\n        document.getElementById('instructions').classList.add('hidden');\n        document.getElementById('instructionsMobile').classList.add('hidden');\n    }\n\n    drawShip(body) {\n        let radius = body.shapes[0].radius;\n        ctx.save();\n        ctx.translate(body.position[0], body.position[1]); // Translate to the ship center\n        ctx.rotate(body.angle); // Rotate to ship orientation\n        ctx.beginPath();\n        ctx.moveTo(-radius*0.6, -radius);\n        ctx.lineTo(0, radius);\n        ctx.lineTo( radius*0.6, -radius);\n        ctx.moveTo(-radius*0.5, -radius*0.5);\n        ctx.lineTo( radius*0.5, -radius*0.5);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.restore();\n\n    }\n\n    drawAsteroid(body) {\n        ctx.save();\n        ctx.translate(body.position[0], body.position[1]);  // Translate to the center\n        ctx.rotate(.785);\n        ctx.beginPath();\n        for(let j=0; j < game.numAsteroidVerts; j++) {\n            let xv = body.verts[j][0];\n            let yv = body.verts[j][1];\n            if (j==0) ctx.moveTo(xv, yv);\n            else ctx.lineTo(xv, yv);\n        }\n        ctx.closePath();\n        ctx.stroke();\n        ctx.restore();\n    }\n\n    drawBullet(body) {\n        ctx.beginPath();\n        ctx.arc(body.position[0], body.position[1], game.bulletRadius, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.closePath();\n    }\n\n    drawBounds() {\n        ctx.beginPath();\n        ctx.moveTo(-game.spaceWidth/2, -game.spaceHeight/2);\n        ctx.lineTo(-game.spaceWidth/2, game.spaceHeight/2);\n        ctx.lineTo( game.spaceWidth/2, game.spaceHeight/2);\n        ctx.lineTo( game.spaceWidth/2, -game.spaceHeight/2);\n        ctx.lineTo(-game.spaceWidth/2, -game.spaceHeight/2);\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n}\n"],"file":"AsteroidsRenderer.js"}