{"version":3,"sources":["../../src/client/AsteroidsClientEngine.js"],"names":["betaTiltThreshold","gammaTiltThreshold","steerThreshold","AsteroidsClientEngine","gameEngine","options","AsteroidsRenderer","isTouchDevice","document","querySelector","classList","remove","actions","Set","fireButton","style","opacity","boostButton","window","addEventListener","handleOrientation","bind","handleButton","on","preStep","controls","KeyboardControls","bindKey","repeat","action","ev","add","preventDefault","event","isPortrait","innerHeight","innerWidth","beta","gamma","flip","steerValue","Math","max","min","forEach","sendInput","movement","ClientEngine","navigator","maxTouchPoints"],"mappings":"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","sourcesContent":["import { ClientEngine, KeyboardControls } from 'lance-gg';\nimport AsteroidsRenderer from '../client/AsteroidsRenderer';\n\nconst betaTiltThreshold = 40;\nconst gammaTiltThreshold = 40;\nconst steerThreshold = 0.4;\n\nexport default class AsteroidsClientEngine extends ClientEngine {\n\n    constructor(gameEngine, options) {\n        super(gameEngine, options, AsteroidsRenderer);\n\n        //  Game input\n        if (isTouchDevice()) {\n            document.querySelector('#instructionsMobile').classList.remove('hidden');\n\n            this.actions = new Set();\n\n            this.fireButton = document.querySelector('.fireButton');\n            this.fireButton.style.opacity = 1;\n            this.boostButton = document.querySelector('.boostButton');\n            this.boostButton.style.opacity = 1;\n            window.addEventListener('deviceorientation', this.handleOrientation.bind(this));\n            this.fireButton.addEventListener('touchstart', this.handleButton.bind(this, 'space'), false);\n            this.boostButton.addEventListener('touchstart', this.handleButton.bind(this, 'up'), false);\n            this.gameEngine.on('client__preStep', this.preStep.bind(this));\n        } else {\n            document.querySelector('#instructions').classList.remove('hidden');\n            this.controls = new KeyboardControls(this);\n            this.controls.bindKey('up', 'up', { repeat: true } );\n            this.controls.bindKey('down', 'down', { repeat: true } );\n            this.controls.bindKey('left', 'left', { repeat: true } );\n            this.controls.bindKey('right', 'right', { repeat: true } );\n            this.controls.bindKey('space', 'space');\n        }\n    }\n\n    handleButton(action, ev) {\n        this.actions.add(action);\n        ev.preventDefault();\n    }\n\n    handleOrientation(event) {\n        let isPortrait = window.innerHeight > window.innerWidth;\n        let beta = event.beta;  // In degree in the range [-180,180]\n        let gamma = event.gamma; // In degree in the range [-90,90]\n        let flip = gamma > 0;\n        let steerValue = Math.max(-1, Math.min(1, beta / betaTiltThreshold)) * (flip?-1:1);\n        if (isPortrait) {\n            flip = beta < 0;\n            steerValue = Math.max(-1, Math.min(1, gamma / gammaTiltThreshold)) * (flip?-1:1);\n        }\n\n        this.actions.delete('left');\n        this.actions.delete('right');\n        if (steerValue < -steerThreshold) this.actions.add('left');\n        else if (steerValue > steerThreshold) this.actions.add('right');\n    }\n\n    // our pre-step is to process inputs that are \"currently pressed\" during the game step\n    preStep() {\n        this.actions.forEach((action) => this.sendInput(action, { movement: true }));\n        this.actions = new Set();\n    }\n\n}\n\nfunction isTouchDevice() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints;\n}\n"],"file":"AsteroidsClientEngine.js"}