{"version":3,"sources":["../../src/client/AsteroidsClientEngine.js"],"names":["$","require","betaTiltThreshold","gammaTiltThreshold","steerThreshold","AsteroidsClientEngine","gameEngine","options","AsteroidsRenderer","playerOptions","isTouchDevice","document","querySelector","classList","remove","actions","Set","fireButton","style","opacity","boostButton","window","addEventListener","handleOrientation","bind","handleButton","on","preStep","resizeGame","controls","KeyboardControls","bindKey","repeat","gameStarted","action","ev","add","preventDefault","event","isPortrait","innerHeight","innerWidth","beta","gamma","flip","steerValue","Math","max","min","forEach","sendInput","movement","connectSocket","matchMakerAnswer","Promise","resolve","reject","status","verbose","console","log","serverURL","socket","networkMonitor","registerClient","error","playerData","playerId","messageIndex","Number","emit","getElementById","display","click","data","viewer","renderer","playerReady","groupShipPID","ship_pid","showCanvas","alert","groupData","innerHTML","c_playerName","v_playerName","visibility","c_ready","v_ready","worldData","inboundMessages","push","roomData","reason","disconnect","matchmaker","Utils","httpGetPromise","then","ClientEngine","navigator","maxTouchPoints"],"mappings":"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","sourcesContent":["import { ClientEngine, KeyboardControls } from 'lance-gg';\nimport AsteroidsRenderer from '../client/AsteroidsRenderer';\nimport Utils from \"lance-gg/src/lib/Utils\";\nimport io from 'socket.io-client';\nconst $ = require('jquery');\n\nconst betaTiltThreshold = 40;\nconst gammaTiltThreshold = 40;\nconst steerThreshold = 0.4;\n\nexport default class AsteroidsClientEngine extends ClientEngine {\n\n    constructor(gameEngine, options) {\n        super(gameEngine, options, AsteroidsRenderer);\n        this.playerOptions = options.playerOptions;\n        //  Game input\n        if (isTouchDevice()) {\n            document.querySelector('#instructionsMobile').classList.remove('hidden');\n\n            this.actions = new Set();\n\n            this.fireButton = document.querySelector('.fireButton');\n            this.fireButton.style.opacity = 1;\n            this.boostButton = document.querySelector('.boostButton');\n            this.boostButton.style.opacity = 1;\n            window.addEventListener('deviceorientation', this.handleOrientation.bind(this));\n            this.fireButton.addEventListener('touchstart', this.handleButton.bind(this, 'space'), false);\n            this.boostButton.addEventListener('touchstart', this.handleButton.bind(this, 'up'), false);\n            this.gameEngine.on('client__preStep', this.preStep.bind(this));\n        } else {\n            document.querySelector('#instructions').classList.remove('hidden');\n            window.addEventListener('resize', this.resizeGame, false);\n            this.controls = new KeyboardControls(this);\n            this.controls.bindKey('up', 'up', { repeat: true } );\n            this.controls.bindKey('down', 'down', { repeat: true } );\n            this.controls.bindKey('left', 'left', { repeat: true } );\n            this.controls.bindKey('right', 'right', { repeat: true } );\n            this.controls.bindKey('space', 'space');\n        }\n        this.gameStarted = false;\n    }\n\n    handleButton(action, ev) {\n        this.actions.add(action);\n        ev.preventDefault();\n    }\n\n    handleOrientation(event) {\n        let isPortrait = window.innerHeight > window.innerWidth;\n        let beta = event.beta;  // In degree in the range [-180,180]\n        let gamma = event.gamma; // In degree in the range [-90,90]\n        let flip = gamma > 0;\n        let steerValue = Math.max(-1, Math.min(1, beta / betaTiltThreshold)) * (flip?-1:1);\n        if (isPortrait) {\n            flip = beta < 0;\n            steerValue = Math.max(-1, Math.min(1, gamma / gammaTiltThreshold)) * (flip?-1:1);\n        }\n\n        this.actions.delete('left');\n        this.actions.delete('right');\n        if (steerValue < -steerThreshold) this.actions.add('left');\n        else if (steerValue > steerThreshold) this.actions.add('right');\n    }\n\n    // our pre-step is to process inputs that are \"currently pressed\" during the game step\n    preStep() {\n        this.actions.forEach((action) => this.sendInput(action, { movement: true }));\n        this.actions = new Set();\n    }\n\n    /**\n     * Makes a connection to the game server.  Extend this method if you want to add additional\n     * logic on every connection. Call the super-class connect first, and return a promise which\n     * executes when the super-class promise completes.\n     *\n     * @param {Object} [options] additional socket.io options\n     * @return {Promise} Resolved when the connection is made to the server\n     */\n    connect(options = {}) {\n\n        let connectSocket = matchMakerAnswer => {\n            return new Promise((resolve, reject) => {\n\n                if (matchMakerAnswer.status !== 'ok')\n                    reject('matchMaker failed status: ' + matchMakerAnswer.status);\n\n                if (this.options.verbose)\n                    console.log(`connecting to game server ${matchMakerAnswer.serverURL}`);\n                this.socket = io(matchMakerAnswer.serverURL, options);\n\n                this.networkMonitor.registerClient(this);\n\n                this.socket.on('connect', () => {\n                    if (this.options.verbose)\n                        console.log('connection made');\n                    resolve();\n                });\n\n                this.socket.on('error', (error) => {\n                    reject(error);\n                });\n\n                this.socket.on('playerJoined', (playerData) => {\n                    this.gameEngine.playerId = playerData.playerId;\n                    this.messageIndex = Number(this.gameEngine.playerId) * 10000;\n                    this.socket.emit('playerDataUpdate', this.playerOptions);\n                });\n\n                this.socket.on('waitingForPlayer', () => {\n                    document.querySelector('#instructions').classList.remove('hidden');\n                    document.getElementById('waiting-room-overlay').style.display = 'block';\n                    document.getElementById('waiting-room-container').style.display = 'block';\n\n                    $('#start-button').click(() => {\n                        this.socket.emit('playerReady');\n                        // document.getElementById('start-button').style.visibility = 'hidden';\n                    });\n                    $('#switch-button').click(() => {\n                        this.socket.emit('playerSwitchRole');\n                    });\n                });\n\n                this.socket.on('gameBegin', (data) => {\n                    document.querySelector('#instructions').classList.add('hidden');\n                    $('#waiting-room-overlay').remove();\n                    this.viewer = this.renderer.viewer = data.viewer;\n                    this.gameStarted = true;\n                    this.gameEngine.playerReady[this.gameEngine.playerId] = true;\n                    this.renderer.groupShipPID = data.ship_pid;\n                    this.renderer.showCanvas();\n                });\n\n                this.socket.on('groupFull', () => {\n                    window.alert('Group is full, please join/create another group.');\n                    document.getElementById('name-prompt-overlay').style.display = 'block';\n                    document.getElementById('name-prompt-container').style.display = 'block';\n                });\n\n                this.socket.on('groupUpdate', (groupData) => {\n                    if (this.gameStarted) {\n                        document.getElementById('other_player_disconnect').style.display = 'block';\n                    } else {\n                        document.getElementById('controller_label').innerHTML = groupData.c_playerName;\n                        document.getElementById('viewer_label').innerHTML = groupData.v_playerName;\n                        document.getElementById('controller_ready_img').style.visibility =\n                            (groupData.c_ready ? 'visible' : 'hidden');\n                        document.getElementById('viewer_ready_img').style.visibility =\n                            (groupData.v_ready ? 'visible' : 'hidden');\n                    }\n                });\n\n                this.socket.on('worldUpdate', (worldData) => {\n                    this.inboundMessages.push(worldData);\n                });\n\n                this.socket.on('roomUpdate', (roomData) => {\n                    this.gameEngine.emit('client__roomUpdate', roomData);\n                });\n\n                this.socket.on('disconnect', (reason) => {\n                    console.log(reason);\n                    window.alert('Server disconnected. Please refresh when server is available.');\n                    this.socket.disconnect();\n                });\n\n            });\n        };\n\n        let matchmaker = Promise.resolve({ serverURL: this.options.serverURL, status: 'ok' });\n        if (this.options.matchmaker)\n            matchmaker = Utils.httpGetPromise(this.options.matchmaker);\n\n        return matchmaker.then(connectSocket);\n    }\n}\n\nfunction isTouchDevice() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints;\n}\n"],"file":"AsteroidsClientEngine.js"}