{"version":3,"sources":["../../src/client/AsteroidsClientEngine.js"],"names":["$","require","betaTiltThreshold","gammaTiltThreshold","steerThreshold","AsteroidsClientEngine","gameEngine","options","AsteroidsRenderer","playerOptions","isTouchDevice","document","querySelector","classList","remove","actions","Set","fireButton","style","opacity","boostButton","window","addEventListener","handleOrientation","bind","handleButton","on","preStep","controls","KeyboardControls","bindKey","repeat","action","ev","add","preventDefault","event","isPortrait","innerHeight","innerWidth","beta","gamma","flip","steerValue","Math","max","min","forEach","sendInput","movement","connectSocket","matchMakerAnswer","Promise","resolve","reject","status","verbose","console","log","serverURL","socket","networkMonitor","registerClient","once","error","playerData","playerId","messageIndex","Number","emit","getElementById","display","click","playerReady","worldData","inboundMessages","push","roomData","matchmaker","Utils","httpGetPromise","then","ClientEngine","navigator","maxTouchPoints"],"mappings":"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","sourcesContent":["import { ClientEngine, KeyboardControls } from 'lance-gg';\r\nimport AsteroidsRenderer from '../client/AsteroidsRenderer';\r\nimport Utils from \"lance-gg/src/lib/Utils\";\r\nimport io from 'socket.io-client';\r\nconst $ = require('jquery');\r\n\r\nconst betaTiltThreshold = 40;\r\nconst gammaTiltThreshold = 40;\r\nconst steerThreshold = 0.4;\r\n\r\nexport default class AsteroidsClientEngine extends ClientEngine {\r\n\r\n    constructor(gameEngine, options) {\r\n        super(gameEngine, options, AsteroidsRenderer);\r\n        this.playerOptions = options.playerOptions;\r\n        //  Game input\r\n        if (isTouchDevice()) {\r\n            document.querySelector('#instructionsMobile').classList.remove('hidden');\r\n\r\n            this.actions = new Set();\r\n\r\n            this.fireButton = document.querySelector('.fireButton');\r\n            this.fireButton.style.opacity = 1;\r\n            this.boostButton = document.querySelector('.boostButton');\r\n            this.boostButton.style.opacity = 1;\r\n            window.addEventListener('deviceorientation', this.handleOrientation.bind(this));\r\n            this.fireButton.addEventListener('touchstart', this.handleButton.bind(this, 'space'), false);\r\n            this.boostButton.addEventListener('touchstart', this.handleButton.bind(this, 'up'), false);\r\n            this.gameEngine.on('client__preStep', this.preStep.bind(this));\r\n        } else {\r\n            document.querySelector('#instructions').classList.remove('hidden');\r\n            this.controls = new KeyboardControls(this);\r\n            this.controls.bindKey('up', 'up', { repeat: true } );\r\n            this.controls.bindKey('down', 'down', { repeat: true } );\r\n            this.controls.bindKey('left', 'left', { repeat: true } );\r\n            this.controls.bindKey('right', 'right', { repeat: true } );\r\n            this.controls.bindKey('space', 'space');\r\n        }\r\n    }\r\n\r\n    handleButton(action, ev) {\r\n        this.actions.add(action);\r\n        ev.preventDefault();\r\n    }\r\n\r\n    handleOrientation(event) {\r\n        let isPortrait = window.innerHeight > window.innerWidth;\r\n        let beta = event.beta;  // In degree in the range [-180,180]\r\n        let gamma = event.gamma; // In degree in the range [-90,90]\r\n        let flip = gamma > 0;\r\n        let steerValue = Math.max(-1, Math.min(1, beta / betaTiltThreshold)) * (flip?-1:1);\r\n        if (isPortrait) {\r\n            flip = beta < 0;\r\n            steerValue = Math.max(-1, Math.min(1, gamma / gammaTiltThreshold)) * (flip?-1:1);\r\n        }\r\n\r\n        this.actions.delete('left');\r\n        this.actions.delete('right');\r\n        if (steerValue < -steerThreshold) this.actions.add('left');\r\n        else if (steerValue > steerThreshold) this.actions.add('right');\r\n    }\r\n\r\n    // our pre-step is to process inputs that are \"currently pressed\" during the game step\r\n    preStep() {\r\n        this.actions.forEach((action) => this.sendInput(action, { movement: true }));\r\n        this.actions = new Set();\r\n    }\r\n\r\n    /**\r\n     * Makes a connection to the game server.  Extend this method if you want to add additional\r\n     * logic on every connection. Call the super-class connect first, and return a promise which\r\n     * executes when the super-class promise completes.\r\n     *\r\n     * @param {Object} [options] additional socket.io options\r\n     * @return {Promise} Resolved when the connection is made to the server\r\n     */\r\n    connect(options = {}) {\r\n\r\n        let connectSocket = matchMakerAnswer => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                if (matchMakerAnswer.status !== 'ok')\r\n                    reject('matchMaker failed status: ' + matchMakerAnswer.status);\r\n\r\n                if (this.options.verbose)\r\n                    console.log(`connecting to game server ${matchMakerAnswer.serverURL}`);\r\n                this.socket = io(matchMakerAnswer.serverURL, options);\r\n\r\n                this.networkMonitor.registerClient(this);\r\n\r\n                this.socket.once('connect', () => {\r\n                    if (this.options.verbose)\r\n                        console.log('connection made');\r\n                    resolve();\r\n                });\r\n\r\n                this.socket.once('error', (error) => {\r\n                    reject(error);\r\n                });\r\n\r\n                this.socket.on('playerJoined', (playerData) => {\r\n                    this.gameEngine.playerId = playerData.playerId;\r\n                    this.messageIndex = Number(this.gameEngine.playerId) * 10000;\r\n                    this.socket.emit('playerDataUpdate', this.playerOptions);\r\n                });\r\n\r\n                this.socket.on('waitingForPlayer', () => {\r\n                    document.getElementById('waiting-room-overlay').style.display = 'block';\r\n                    document.getElementById('waiting-room-container').style.display = 'block';\r\n                    $('#start-submit').click(() => {\r\n                        $('#waiting-room-overlay').remove();\r\n                        this.socket.emit('playerReady');\r\n                        this.gameEngine.playerReady[this.gameEngine.playerId] = true;\r\n                    });\r\n                });\r\n\r\n                this.socket.on('worldUpdate', (worldData) => {\r\n                    this.inboundMessages.push(worldData);\r\n                });\r\n\r\n                this.socket.on('roomUpdate', (roomData) => {\r\n                    this.gameEngine.emit('client__roomUpdate', roomData);\r\n                });\r\n            });\r\n        };\r\n\r\n        let matchmaker = Promise.resolve({ serverURL: this.options.serverURL, status: 'ok' });\r\n        if (this.options.matchmaker)\r\n            matchmaker = Utils.httpGetPromise(this.options.matchmaker);\r\n\r\n        return matchmaker.then(connectSocket);\r\n    }\r\n}\r\n\r\nfunction isTouchDevice() {\r\n    return 'ontouchstart' in window || navigator.maxTouchPoints;\r\n}\r\n"],"file":"AsteroidsClientEngine.js"}