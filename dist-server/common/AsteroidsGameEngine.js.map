{"version":3,"sources":["../../src/common/AsteroidsGameEngine.js"],"names":["AsteroidsGameEngine","options","physicsEngine","P2PhysicsEngine","gameEngine","world","defaultContactMaterial","friction","on","warpAll","bind","Object","assign","lives","shipSize","shipTurnSpeed","shipSpeed","bulletRadius","bulletLifeTime","asteroidRadius","numAsteroidLevels","numAsteroidVerts","maxAsteroidSpeed","spaceWidth","spaceHeight","SHIP","Math","pow","BULLET","ASTEROID","FINISHLINE","playerReady","forEachObject","id","obj","p","position","v","velocity","x","y","refreshToPhysics","serializer","registerClass","Ship","Asteroid","Bullet","FinishLine","inputData","playerId","playerShip","queryObject","instanceType","input","physicsObj","applyForceLocal","angle","emit","refreshFromPhysics","c_name","v_name","score","s","mass","angularVelocity","TwoVector","won","addObjectToWorld","min","max","floor","random","queryObjects","o","resetShip","ship","old_score","old_pid","removeObjectFromWorld","addShip","asteroid","bullet","asteroidBody","level","r","posX","posY","sizeX","sizeY","barrier","a","currentWorld","world_choice","getRandInt","empty_world","one_block_world","over_middle_under_world","s_world","enter_the_room","crossroads","s_tunnel","spiral","addFinishLine","buildBarrier","GameEngine"],"mappings":"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","sourcesContent":["import { GameEngine, P2PhysicsEngine, TwoVector } from 'lance-gg';\nimport Asteroid from './Asteroid';\nimport Bullet from './Bullet';\nimport Ship from './Ship';\nimport FinishLine from \"./FinishLine\";\n\nexport default class AsteroidsGameEngine extends GameEngine {\n\n    constructor(options) {\n        super(options);\n\n        // create physics with no friction; wrap positions after each step\n        this.physicsEngine = new P2PhysicsEngine({ gameEngine: this });\n        this.physicsEngine.world.defaultContactMaterial.friction = 10;\n        this.on('postStep', this.warpAll.bind(this));\n\n        // game variables\n        Object.assign(this, {\n            lives: 0,\n            shipSize: 0.4,\n            shipTurnSpeed: 0.035,\n            shipSpeed: 4,\n            bulletRadius: 0.03,\n            bulletLifeTime: 60,\n            asteroidRadius: 1.125,\n            numAsteroidLevels: 4,\n            numAsteroidVerts: 4,\n            maxAsteroidSpeed: 0,\n            spaceWidth: 16,\n            spaceHeight: 9,\n            SHIP: Math.pow(2, 1),\n            BULLET: Math.pow(2, 2),\n            ASTEROID: Math.pow(2, 3),\n            FINISHLINE: Math.pow(2, 4),\n        });\n\n        this.playerReady = {};\n    }\n\n    // If the body is out of space bounds, warp it to the other side\n    warpAll() {\n        this.world.forEachObject((id, obj) => {\n            let p = obj.position;\n            let v = obj.velocity;\n            if (p.x > this.spaceWidth / 2) {\n                p.x = this.spaceWidth / 2;\n                v.x = 0;\n            }\n            if (p.y > this.spaceHeight / 2) {\n                p.y = this.spaceHeight / 2;\n                v.y = 0;\n            }\n            if (p.x < -this.spaceWidth / 2) {\n                p.x = -this.spaceWidth / 2;\n                v.x = 0;\n            }\n            if (p.y < -this.spaceHeight / 2) {\n                p.y = -this.spaceHeight / 2;\n                v.y = 0;\n            }\n            obj.refreshToPhysics();\n        });\n\n    }\n\n    registerClasses(serializer) {\n        serializer.registerClass(Ship);\n        serializer.registerClass(Asteroid);\n        serializer.registerClass(Bullet);\n        serializer.registerClass(FinishLine);\n    }\n\n    processInput(inputData, playerId) {\n        super.processInput(inputData, playerId);\n        if (playerId in this.playerReady && this.playerReady[playerId]) {\n            // handle keyboard presses\n            let playerShip = this.world.queryObject({ playerId: playerId, instanceType: Ship });\n            if (playerShip) {\n                if (inputData.input === 'up') {\n                    playerShip.physicsObj.applyForceLocal([0, -this.shipSpeed]);\n                } else if (inputData.input === 'right') {\n                    playerShip.physicsObj.angle += this.shipTurnSpeed;\n                } else if (inputData.input === 'left') {\n                    playerShip.physicsObj.angle -= this.shipTurnSpeed;\n                } else if (inputData.input === 'down') {\n                    playerShip.physicsObj.applyForceLocal([0, this.shipSpeed]);\n                } else if (inputData.input === 'space') {\n                    this.emit('shoot', playerShip);\n                }\n                playerShip.refreshFromPhysics();\n            }\n        }\n    }\n\n    // create ship\n    addShip(playerId, c_name, v_name, score = 0) {\n        let s = new Ship(this, {}, {\n            playerId: playerId,\n            mass: 10,\n            angularVelocity: 0,\n            position: new TwoVector(-6.4, 3.6),\n            velocity: new TwoVector(0, 0),\n        });\n        s.score = score;\n        s.won = false;\n        s.c_name = c_name;\n        s.v_name = v_name;\n        this.addObjectToWorld(s);\n    }\n\n    getRandInt(min, max) {\n        // Includes min and max.\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    resetAllShips() {\n        for (let o of this.world.queryObjects({ instanceType: Ship })) {\n            this.resetShip(o);\n        }\n    }\n\n    resetShip(ship) {\n        let old_score = ship.score;\n        let c_name = ship.c_name;\n        let v_name = ship.v_name;\n        let old_pid = ship.playerId;\n        this.removeObjectFromWorld(ship.id);\n        this.addShip(old_pid, c_name, v_name, old_score);\n    }\n\n    // asteroid explosion\n    explode(asteroid, bullet) {\n        // Remove asteroid and bullet\n        let asteroidBody = asteroid.physicsObj;\n        let level = asteroid.level;\n        let x = asteroidBody.position[0];\n        let y = asteroidBody.position[1];\n        let r = this.asteroidRadius * (this.numAsteroidLevels - level) / this.numAsteroidLevels;\n        this.removeObjectFromWorld(asteroid);\n        this.removeObjectFromWorld(bullet);\n\n        // Add new sub-asteroids\n        /*\n        if (level < 3) {\n            let angleDisturb = Math.PI/2 * Math.random();\n            for (let i=0; i<4; i++) {\n                let angle = Math.PI/2 * i + angleDisturb;\n                let subAsteroid = new Asteroid(this, {}, {\n                    mass: 10,\n                    position: new TwoVector(x + r * Math.cos(angle), y + r * Math.sin(angle)),\n                    velocity: new TwoVector(0, 0)\n                });\n                subAsteroid.level = level + 1;\n                this.trace.info(() => `creating sub-asteroid with radius ${r}: ${subAsteroid.toString()}`);\n                this.addObjectToWorld(subAsteroid);\n            }\n        }\n        */\n    }\n\n    buildBarrier(posX, posY, sizeX, sizeY) {\n        let barrier = new Asteroid(this, {}, {\n            mass: 100000,\n            position: new TwoVector(posX, posY),\n            velocity: new TwoVector(0, 0),\n            angularVelocity: 0\n        }, new TwoVector(sizeX, sizeY));\n        barrier.level = 0;\n        this.addObjectToWorld(barrier);\n    }\n\n    // Add finishline\n    addFinishLine(posX, posY) {\n        let a = new FinishLine(this, {}, {\n            mass: 10000,\n            position: new TwoVector(posX, posY),\n            velocity: new TwoVector(0, 0),\n            angularVelocity: 0\n        }, new TwoVector(1, 1));\n        a.level = 0;\n        this.addObjectToWorld(a);\n    }\n\n    removeAllBarriers() {\n        for (let o of this.world.queryObjects({ instanceType: Asteroid })) {\n            this.removeObjectFromWorld(o.id);\n        }\n        for (let o of this.world.queryObjects({ instanceType: FinishLine })) {\n            this.removeObjectFromWorld(o.id);\n        }\n    }\n\n    /*\n     * World Generation Code\n     * 10 different levels\n     */\n    addBarriers(currentWorld) {\n        let world_choice = currentWorld;\n        while (!world_choice || world_choice === currentWorld) {\n            world_choice = this.getRandInt(0, 7);\n        }\n        switch(world_choice) {\n            case 0:\n                this.empty_world();\n                break;\n            case 1:\n                this.one_block_world();\n                break;\n            case 2:\n                this.over_middle_under_world();\n                break;\n            case 3:\n                this.s_world();\n                break;\n            case 4:\n                this.enter_the_room();\n                break;\n            case 5:\n                this.crossroads();\n                break;\n            case 6:\n                this.s_tunnel();\n                break;\n            case 7:\n                this.spiral();\n                break;\n        }\n        return world_choice;\n    }\n\n    empty_world() {\n        this.addFinishLine(6.5, -3.75);\n    }\n\n    one_block_world() {\n        this.buildBarrier(-5, 1.5, 1, 3);\n        this.addFinishLine(6.5, -3.75);\n    }\n\n    over_middle_under_world() {\n        this.buildBarrier(-5, 1.5, 1, 7);\n        this.buildBarrier(5, -1.5, 1, 7);\n        this.buildBarrier(0, -3, 1, 4);\n        this.buildBarrier(0, 3, 1, 4);\n        this.addFinishLine(6.5, -3.75);\n    }\n\n    s_world() {\n        this.buildBarrier(-1.5, 2, 13, 1);\n        this.buildBarrier(1.5, -2, 13, 1);\n        this.addFinishLine(6.5, -3.75);\n    }\n\n    enter_the_room() {\n        this.buildBarrier(-1.5, 2, 13, 1);\n        this.buildBarrier(0, -3, 1, 4);\n        this.addFinishLine(-6.5, -3.75);\n    }\n\n    crossroads() {\n        this.buildBarrier(5, 3, 1, 1);\n        this.buildBarrier(5, 0, 1, 1);\n        this.addFinishLine(5, -3);\n\n        this.buildBarrier(2.5, 3, 1, 1);\n        this.buildBarrier(2.5, 0, 1, 1);\n        this.buildBarrier(2.5, -3, 1, 1);\n\n        this.buildBarrier(0, 3, 1, 1);\n        this.buildBarrier(0, 0, 1, 1);\n        this.buildBarrier(0, -3, 1, 1);\n\n        this.buildBarrier(-2.5, 3, 1, 1);\n        this.buildBarrier(-2.5, 0, 1, 1);\n        this.buildBarrier(-2.5, -3, 1, 1);\n\n        this.buildBarrier(-5, 3, 1, 1);\n        this.buildBarrier(-5, 0, 1, 1);\n        this.buildBarrier(-5, -3, 1, 1);\n    }\n\n    s_tunnel() {\n        // Top and Bottom\n        this.buildBarrier(0, 5, 11, 1);\n        this.buildBarrier(0, -5, 11, 1);\n\n        // Left and Right\n        this.buildBarrier(5, -1, 1, 6);\n        this.buildBarrier(-5, 1, 1, 6);\n\n        // Middle\n        this.buildBarrier(-1, -1.5, 7, 1);\n        this.buildBarrier(1, 1.5, 7, 1);\n\n        this.addFinishLine(6.5, -3.75);\n    }\n\n    spiral() {\n        // Top and Bottom\n        this.buildBarrier(0, 7, 11, 1);\n        this.buildBarrier(0, -7, 11, 1);\n\n        // Left and Right\n        this.buildBarrier(6, 0, 1, 13);\n        this.buildBarrier(-5, 1, 1, 6);\n        this.buildBarrier(2, 0.5, 1, 3);\n\n        // Middle\n        this.buildBarrier(-1, -1.5, 7, 1);\n        this.buildBarrier(0, 1.5, 5, 1);\n\n        this.addFinishLine(0, 0);\n    }\n}\n"],"file":"AsteroidsGameEngine.js"}