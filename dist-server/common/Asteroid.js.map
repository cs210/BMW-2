{"version":3,"sources":["../../src/common/Asteroid.js"],"names":["game","p2","Asteroid","gameEngine","options","props","dim","console","log","physicsEngine","physicsObj","Body","mass","damping","angularDamping","position","x","y","velocity","addShape","Box","width","height","collisionGroup","ASTEROID","collisionMask","BULLET","SHIP","addAsteroidVerts","world","addBody","removeBody","shapes","verts","other","level","max","Object","assign","type","BaseTypes","TYPES","INT16","CLASSINSTANCE","PhysicalObject2D"],"mappings":"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","sourcesContent":["import { PhysicalObject2D, BaseTypes } from 'lance-gg';\n\nlet game = null;\nlet p2 = null;\n\nexport default class Asteroid extends PhysicalObject2D {\n\n    constructor(gameEngine, options, props, dim) {\n        super(gameEngine, options, props);\n        this.dim = dim;\n    }\n\n    static get netScheme() {\n        return Object.assign({\n            level: { type: BaseTypes.TYPES.INT16 },\n            dim: { type: BaseTypes.TYPES.CLASSINSTANCE }\n        }, super.netScheme);\n    }\n\n    // position bending: bend fully to server position in each sync [percent=1.0],\n    // unless the position difference is larger than 4.0 (i.e. wrap beyond bounds)\n    get bending() {\n        return { position: { max: 4.0 } };\n    }\n\n    // on add-to-world, create a physics body\n    onAddToWorld() {\n        console.log(\"Variable dim that is passed thru: \");\n        console.log(this.dim);\n        game = this.gameEngine;\n        p2 = game.physicsEngine.p2;\n        this.physicsObj = new p2.Body({\n            mass: this.mass, damping: 0, angularDamping: 0,\n            position: [this.position.x, this.position.y],\n            velocity: [this.velocity.x, this.velocity.y]\n        });\n        this.physicsObj.addShape(new p2.Box({\n            width: this.dim.x,\n            height: this.dim.y,\n            collisionGroup: game.ASTEROID, // Belongs to the ASTEROID group\n            collisionMask: game.BULLET | game.SHIP // Can collide with the BULLET or SHIP group\n        }));\n        this.addAsteroidVerts();\n        game.physicsEngine.world.addBody(this.physicsObj);\n    }\n\n    // on remove-from-world, remove the physics body\n    onRemoveFromWorld() {\n        game.physicsEngine.world.removeBody(this.physicsObj);\n    }\n\n    // Adds random .verts to an asteroid body\n    addAsteroidVerts() {\n        let width = this.physicsObj.shapes[0].width;\n        let height = this.physicsObj.shapes[0].height;\n        this.physicsObj.verts = [\n            [-width / 2, -height / 2],\n            [-width / 2, height / 2],\n            [width / 2, height / 2],\n            [width / 2, -height / 2],\n        ];\n    }\n\n    syncTo(other) {\n        super.syncTo(other);\n        this.dim = other.dim;\n    }\n\n    toString() {\n        return `Asteroid::${super.toString()} Level${this.level}`;\n    }\n}\n"],"file":"Asteroid.js"}